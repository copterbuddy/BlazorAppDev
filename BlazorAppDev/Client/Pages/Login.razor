@page "/login"

@using FluentValidation;
@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@using Blazored.FluentValidation
@using System.Security.Claims

@inject IJSRuntime JSRuntime;

<PageTitle>Login</PageTitle>

<div>
    <h1 class="display-3">Login</h1>
</div>
<hr />
<EditForm Model="@Model" OnSubmit="@HandleSubmit">
    <FluentValidationValidator @ref="_validatorModel" />
    <ValidationSummary />

    <div class="mb-3">
        <label for="email" class="form-label">Email address</label>
        <input type="text" class="form-control" id="email" @bind="@Model.Email" placeholder="name@example.com">
        <ValidationMessage For="@(() => Model.Email)" />
    </div>
    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <input type="password" class="form-control" id="password" @bind="@Model.Password" placeholder="Password">
        <ValidationMessage For="@(() => Model.Password)" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

<AuthorizeView Roles="Admin">
    <Authorized>
        The user: @context.User.FindFirst(ClaimTypes.Name)?.Value is authorized
    </Authorized>
    <NotAuthorized>
        The User is not authorized
    </NotAuthorized>
</AuthorizeView>